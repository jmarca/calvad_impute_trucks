{
   "language": "javascript",
   "views": {
       "pairRData": {
           "map": "function(doc) {\n  var re = new RegExp(\"^wim\"); \n  if( ! re.test(doc._id) ){\n    var re2 = new RegExp(\"^wim.*paired\\.RData$\"); \n    var keys = Object.keys(doc._attachments);\n    var ys = keys.filter(function(k){return re2.test(k)});\n    \n    ys.forEach(function(y){\n      var parts=y.split('.')\n      emit([parts[5],doc._id,y],null)\n    })\n  }\n}",
           "reduce": "_count"
       },
       "zero_length_imputation_plots": {
           "map": "function(doc) {\n  var re = new RegExp(\"wim\");\n  if( ! re.test(doc._id) ){\n    var year_regex = new RegExp(\"^\\\\d{4}$\");\n    var keys = Object.keys(doc);\n    var ys = keys.filter(function(k){return year_regex.test(k)});\n    ys.forEach(function(y){\n      var re2 = new RegExp([y,\"imputed_trucks\"].join('_'));\n      var ays = Object.keys(doc._attachments).filter(function(k){return re2.test(k)});\n      if(ays && ays.length > 0){\n        var zerolength = ays.filter(function(k){ return doc._attachments[k]['length'] == 0 ; } )\n        if(zerolength.length>0){\n           emit([y,doc._id], null);\n        }\n      }\n    })\n  }\n}\n",
           "reduce": "_count"
       },
       "raw_imputed_status": {
           "map": "function(doc) {\n    var re = new RegExp(\"^\\\\d+$\");\n    if( re.test(doc._id) ){\n        var years=[2007,2008,2009,2010,2011,2012,2013,2014]\n        var year_regex = new RegExp(\"^\\\\d{4}$\");\n        var keys = Object.keys(doc);\n        var ys = keys.filter(function(k){return year_regex.test(k)});\n        ys.forEach(function(y){\n            var ml = (doc[y].properties !== undefined && doc[y].properties.length) ? doc[y].properties[0].vdstype==='ML' : false\n            // emit only if props[0].vdstype is mainline (ML)\n            if(ml){\n                if(doc[y+''].vdsraw_max_iterations === undefined && doc[y+''].vdsraw_chain_lengths === undefined){\n                    emit([+y,'unprocessed',+doc._id], null)\n                    return null\n                }\n                if(doc[y+''].vdsraw_max_iterations === 0){\n                    emit([+y,'finished',+doc._id], null)\n                    return null\n                }\n                emit([+y,'issues',+doc._id], null)\n            }\n            return null\n        })\n    }\n}\n",
           "reduce": "_count"
       },
       "truckimputation_imputed_status": {
           "map": "function(doc) {\n    var re = new RegExp(\"^\\\\d+$\");\n    if( re.test(doc._id) ){\n        var year_regex = new RegExp(\"^\\\\d{4}$\");\n        var keys = Object.keys(doc);\n        var ys = keys.filter(function(k){return year_regex.test(k)});\n        ys.forEach(function(y){\n            var ml = (doc[y].properties !== undefined && doc[y].properties.length) ? doc[y].properties[0].vdstype==='ML' : false\n            // emit only if props[0].vdstype is mainline (ML)\n            if(ml){\n                if(doc[y+''].truckimputation_max_iterations === undefined && doc[y+''].truckimputation_chain_lengths === undefined){\n                    emit([+y,'unprocessed',+doc._id], null)\n                    return null\n                }\n                if(doc[y+''].truckimputation_max_iterations === 0){\n                    emit([+y,'finished',+doc._id], null)\n                    return null\n                }\n                emit([+y,'issues',+doc._id], null)\n            }\n            return null\n        })\n    }\n}\n",
           "reduce": "_count"
       }
   }
}
